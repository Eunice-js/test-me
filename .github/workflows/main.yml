name: terraform droplet deployment

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main-b

jobs:
  terraform-set-up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: ./

  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform init
        working-directory: ./

      - name: Get HCP API Token
        run: |
          export HCP_API_TOKEN=$(curl --location 'https://auth.hashicorp.com/oauth/token' \
            --header 'content-type: application/json' \
            --data '{
              "audience": "https://api.hashicorp.cloud",
              "grant_type": "client_credentials",
              "client_id": "'${{ secrets.HCP_CLIENT_ID }}'",
              "client_secret": "'${{ secrets.HCP_CLIENT_SECRET }}'"
            }' | jq -r .access_token)
          echo "HCP_API_TOKEN=${HCP_API_TOKEN}" >> $GITHUB_ENV

      # - name: Use HCP API Token
      #   run: |
      #     echo "Using HCP_API_TOKEN: ${HCP_API_TOKEN}"
      #     curl -s \
      #       --location "https://api.cloud.hashicorp.com/secrets/2023-06-13/organizations/063a2cd8-dbf9-4a4e-99f6-609d606c5454/projects/ebd78185-8887-41ab-a61b-2befcc0ab366/apps/testing-app/open" \
      #       --request GET \
      #       --header "Authorization: Bearer $HCP_API_TOKEN" | jq

      - name: Set Terraform variables and TF_LOG
        run: |
          echo "TF_LOG=DEBUG" >> $GITHUB_ENV
          terraform plan \
            -var "hcp_api_token=${HCP_API_TOKEN}" \
            -var "hcp_client_id=${{ secrets.HCP_CLIENT_ID }}" \
            -var "hcp_client_secret=${{ secrets.HCP_CLIENT_SECRET }}" \
            -out=tf.plan

      - name: 'Slack Notification'
        uses: clouddrove/action-slack@v2
        with:
            status: ${{ job.status }}
            fields: repo,author
            author_name: 'Eunice'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TERRAFORM }} # required
            if: always()
